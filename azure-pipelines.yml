# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- manual

pool:
  vmImage: ubuntu-20.04

# variables:
#   - group: 'Kubernetes Connection'


steps:

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Dtest=FaresTest,SimpleTest'
    goals: 'clean package'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'test'

- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'


- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'cicdgen-sonar-svc-conn'
    scannerMode: 'CLI'
    configMode: 'file'
    # extraProperties: |
    #   sonar.login=$(SonarQubeToken)
    #   sonar.host.url=$(SonarQubeUrl)

# - task: SonarQubeAnalyze@5

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: KubernetesManifest@0
  displayName: 'Deploy to Kubernetes'
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'CICDGen-Kube-SVC-Conn'
    manifests: '$(Build.ArtifactStagingDirectory)/deployment.yml'


# - task: SonarQubePrepare@4
#   inputs:
#     SonarQube: 'cicdgen-sonar-svc-conn'
#     scannerMode: 'Other'
#     extraProperties: |
#       sonar.host.url='http://40.85.146.106:9000'
#       sonar.login=$(sonarqube.auth.token)
#       sonar.branch.name=$(Build.SourceBranchName)
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     goals: 'surefire:test'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     javaHomeOption: 'JDKVersion'
#     mavenVersionOption: 'Default'
#     mavenOptions: '-Dtest=FaresTest,SimpleTest'
#     mavenAuthenticateFeed: false
#     effectivePomSkip: false
#     sonarQubeRunAnalysis: true
#     sqMavenPluginVersionChoice: 'latest'



# - task: SonarQubeAnalyze@4
# # - task: SonarQubeAnalyze@5


# - script: |
#     mvn sonar:sonar -Dsonar.host.url=http://40.85.146.106:9000
#       -Dsonar.login=$(sonarqube.auth.token) \
#       -Dsonar.branch.name=$(Build.SourceBranchName)
#   displayName: 'Run SonarQube analysis'

# - task: KubernetesToolInstaller@0
#   inputs:
#     kubernetesVersion: '1.18.6'
#     checkLatest: false

# - task: KubernetesManifest@0
#   inputs:
#     action: 'deploy'
#     kubernetesServiceConnection: 'myKubernetesServiceConnection'
#     namespace: 'default'
#     manifests: |
#       apiVersion: apps/v1
#       kind: Deployment
#       metadata:
#         name: myapp
#         labels:
#           app: myapp
#       spec:
#         replicas: 1
#         selector:
#           matchLabels:
#             app: myapp
#         template:
#           metadata:
#             labels:
#               app: myapp
#           spec:
#             containers:
#             - name: myapp
#               image: myregistry/myapp:$(Build.BuildId)
#               ports:
#               - containerPort: 8080
#     imagePullSecrets: 'myRegistryCreds'

